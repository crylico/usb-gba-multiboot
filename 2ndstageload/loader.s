_start: .global _start
    b entry

    @ Nintendo Logo Character Data (8000004h)

	.byte 0x24, 0x0FF, 0x0AE, 0x51, 0x69, 0x9A
	.byte 0x0A2, 0x21, 0x3D, 0x84, 0x82, 0x0A, 0x84, 0x0E4, 0x9, 0x0AD, 0x11
	.byte 0x24, 0x8B, 0x98, 0x0C0, 0x81, 0x7F, 0x21, 0x0A3, 0x52, 0x0BE
	.byte 0x19, 0x93, 0x9, 0x0CE, 0x20, 0x10, 0x46, 0x4A,0x4A, 0x0F8
	.byte 0x27, 0x31, 0x0EC, 0x58, 0x0C7, 0x0E8, 0x33, 0x82, 0x0E3, 0x0CE
	.byte 0x0BF, 0x85, 0x0F4, 0x0DF, 0x94, 0x0CE, 0x4B, 0x9, 0x0C1, 0x94
	.byte 0x56, 0x8A, 0x0C0, 0x13, 0x72, 0x0A7, 0x0FC, 0x9F, 0x84, 0x4D
	.byte 0x73, 0x0A3, 0x0CA, 0x9A, 0x61, 0x58, 0x97, 0x0A3, 0x27, 0x0FC
	.byte 0x3, 0x98, 0x76, 0x23, 0x1D, 0x0C7, 0x61, 0x3, 0x4, 0x0AE, 0x56, 0x0BF
	.byte 0x38, 0x84, 0, 0x40, 0x0A7, 0x0E, 0x0FD, 0x0FF, 0x52, 0x0FE
	.byte 0x3, 0x6F, 0x95, 0x30, 0x0F1, 0x97, 0x0FB, 0x0C0, 0x85, 0x60, 0x0D6
	.byte 0x80, 0x25, 0x0A9, 0x63, 0x0BE, 0x3, 0x1, 0x4E, 0x38, 0x0E2, 0x0F9
	.byte 0x0A2, 0x34, 0x0FF, 0x0BB, 0x3E, 0x3, 0x44, 0x78, 0x0, 0x90, 0x0CB
	.byte 0x88, 0x11, 0x3A, 0x94, 0x65, 0x0C0, 0x7C, 0x63, 0x87, 0x0F0
	.byte 0x3C, 0x0AF, 0x0D6, 0x25, 0x0E4, 0x8B, 0x38, 0x0A, 0x0AC, 0x72
	.byte 0x21, 0x0D4, 0x0F8, 0x7

    @ Game Title (80000A0h)
        .byte   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
        .byte   0x00,0x00,0x00,0x00

    @ Game Code (80000ACh)
        .byte   0x00,0x00,0x00,0x00

    @ Maker Code (80000B0h)
        .byte   0x30,0x31

    @ Fixed Value (80000B2h)
        .byte   0x96

    @ Main Unit Code (80000B3h)
        .byte   0x00

    @ Device Type (80000B4h)
        .byte   0x00

    @ Unused Data (7Byte) (80000B5h)
        .byte   0x00,0x00,0x00,0x00,0x00,0x00,0x00

    @ Software Version No (80000BCh)
        .byte   0x00

    @ Complement Check (80000BDh)
        .byte   0xf0

    @ Checksum (80000BEh)
        .byte   0x00,0x00

    .align

rom_header_end:
    b entry

.rept 0x7
.word 0
.endr

entry:
    @ relocate to iwram
    adr r1, iwram_code
    mov r0, #0x03000000
    adr r2, iwram_code_end
    sub r2, r2, r1

    bl memcpy

    mov pc, #0x03000000

memcpy:
    mov r2, r2, lsr #2
    copyloop:
    ldr r3,[r1]
    str r3,[r0]
    add r0, r0, #4
    add r1, r1, #4
    sub r2, r2, #1

    cmp r2, #0
    bne copyloop

    bx lr

@ begin relocated code

iwram_code:
    mov r10, #0x04000000
    add r10, r10, #0x120
    ldr r1, magic

wait_magic:
    mov r0, r1
    bl xfer
    cmp r0, r1
    beq download

magic: .word 0xfa57b007

download:
    @ r9 is destination address
    mov r9, #0x02000000

    @ r8 contains number of words
    mov r0, #0
    bl xfer
    mov r8, r0

loop:
    mov r0, r9
    bl xfer
    str r0,[r9]

    sub r8, r8, #1
    add r9, r9, #4

    cmp r8, #0
    bne loop

    mov pc, #0x02000000


xfer:
    str r0,[r10]

    @ set start bit
    ldrh r0,[r10,#0x8]
    orr r0, r0, #0x80
    bic r0, r0, #0x8
    strh r0,[r10,#0x8]

    @ wait for transfer to complete
    wait_startbit:
    ldrh r0,[r10,#0x8]
    and r0, r0, #0x80
    cmp r0, #0
    bne wait_startbit

    @ recieved data
    ldr r0,[r10]
    bx lr

iwram_code_end:
